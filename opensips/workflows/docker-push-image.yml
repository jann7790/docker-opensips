name: Push OpenSIPS Images in Docker Hub

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: false
      tag:
        description: Tag
        required: false
      cli:
        description: Install CLI
        required: false
        type: boolean
      modules:
        description: Extra Modules
        required: false

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Prepare Environment (Dispatch)
      if: github.event_name == 'repository_dispatch'
      run: |
        test -n "${{ github.event.client_payload.version }}" && echo "OPENSIPS_VERSION=${{ github.event.client_payload.version }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.client_payload.tag }}" && echo "OPENSIPS_DOCKER_TAG=${{ github.event.client_payload.tag }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.client_payload.cli }}" && echo "OPENSIPS_CLI=${{ github.event.client_payload.cli }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.client_payload.modules }}" && echo "OPENSIPS_EXTRA_MODULES=\"${{ github.event.client_payload.modules }}\"" >> $GITHUB_ENV || true

    - name: Prepare Environment (Workflow)
      if: github.event_name == 'workflow_dispatch'
      run: |
        test -n "${{ github.event.inputs.version }}" && echo "OPENSIPS_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.inputs.tag }}" && echo "OPENSIPS_DOCKER_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.inputs.cli }}" && echo "OPENSIPS_CLI=${{ github.event.inputs.cli }}" >> $GITHUB_ENV || true
        test -n "${{ github.event.inputs.modules }}" && echo "OPENSIPS_EXTRA_MODULES=\"${{ github.event.inputs.modules }}\"" >> $GITHUB_ENV || true

    - name: Build the Docker image
      id: build
      run: make build 2>&1 | tail -n 1 | awk '{print "DOCKER_TAG="$3 }' >> $GITHUB_OUTPUT

    - name: Log in to Docker Hub
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Publish the Docker image
      run: docker push ${{ steps.build.outputs.DOCKER_TAG }}
